{"version":3,"sources":["actions/types.js","reducers/crypto.js","reducers/index.js","store.js","api/index.js","actions/crypto.js","components/CryptoPriceTracker.js","App.js","index.js"],"names":["FETCH_CRYPTO_LOADING","FETCH_CRYPTO_SUCCESS","FETCH_CRYPTO_FAIL","REMOVE_CRYPTO_TOKEN","ADD_CRYPTO_TOKEN","ADD_CRYPTO_FAIL","initialState","activeCount","error","loading","tokenList","combineReducers","crypto","state","action","type","payload","map","token","symbol","id","selected","addIndex","findIndex","removeIndex","middlewares","thunk","store","createStore","rootReducers","applyMiddleware","api","axios","create","baseURL","addCryptoToken","dispatch","a","get","data","cmc_rank","name","quote","price","USD","CryptoPriceTracker","cryptoData","useSelector","useDispatch","useEffect","i","handleRemoveToken","e","handleAddToken","target","value","className","htmlFor","onChange","onClick","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2aa8ff25.chunk.js","sourcesContent":["export const FETCH_CRYPTO_LOADING = 'FETCH_CRYPTO_LOADING';\r\nexport const FETCH_CRYPTO_SUCCESS = 'FETCH_CRYPTO_SUCCESS';\r\nexport const FETCH_CRYPTO_FAIL = 'FETCH_CRYPTO_FAIL';\r\nexport const REMOVE_CRYPTO_TOKEN = 'REMOVE_CRYPTO_TOKEN';\r\nexport const ADD_CRYPTO_TOKEN = 'ADD_CRYPTO_TOKEN';\r\nexport const ADD_CRYPTO_FAIL = 'ADD_CRYPTO_FAIL';\r\n","import {FETCH_CRYPTO_LOADING, FETCH_CRYPTO_SUCCESS, FETCH_CRYPTO_FAIL, REMOVE_CRYPTO_TOKEN, ADD_CRYPTO_TOKEN, ADD_CRYPTO_FAIL} from '../actions/types';\r\n\r\nconst initialState = {\r\n  activeCount: 0,\r\n  error: null,\r\n  loading: null,\r\n  tokenList: [],\r\n};\r\n\r\nexport const cryptoReducer = (state = initialState, action) => {\r\n  const {type, payload} = action;\r\n  let tokenList = [];\r\n  switch (type) {\r\n    case FETCH_CRYPTO_LOADING:\r\n      return {...state, loading: true};\r\n\r\n    case FETCH_CRYPTO_SUCCESS:\r\n      tokenList = payload.map((token) => {\r\n        return {symbol: token.symbol, id: token.id, selected: false};\r\n      });\r\n      return {...state, error: null, activeCount: 0, loading: false, tokenList};\r\n\r\n    case FETCH_CRYPTO_FAIL:\r\n      return {tokenList: [], error: 'Crypto data could not be fetched', activeCount: 0, loading: false};\r\n\r\n    case ADD_CRYPTO_TOKEN:\r\n      let addIndex = state.tokenList.findIndex((token) => token.symbol === payload.symbol);\r\n      tokenList = [...state.tokenList];\r\n      tokenList[addIndex] = {...payload, selected: true};\r\n      return {...state, loading: false, tokenList, activeCount: state.activeCount + 1};\r\n\r\n    case ADD_CRYPTO_FAIL:\r\n      return {...state, error: 'Crypto token data could not be added', loading: false};\r\n\r\n    case REMOVE_CRYPTO_TOKEN:\r\n      let removeIndex = state.tokenList.findIndex((token) => token.symbol === payload);\r\n      tokenList = [...state.tokenList];\r\n      tokenList[removeIndex].selected = false;\r\n      return {...state, loading: false, tokenList, activeCount: state.activeCount - 1};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {combineReducers} from 'redux';\r\nimport {cryptoReducer} from './crypto';\r\n\r\nexport default combineReducers({\r\n  crypto: cryptoReducer,\r\n});\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport rootReducers from './reducers';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middlewares = [thunk];\r\nconst initialState = {};\r\n\r\nconst enhancers = () => {\r\n  if (process.env.NODE_ENV !== 'development') {\r\n    return applyMiddleware(...middlewares);\r\n  } else {\r\n    return composeWithDevTools(applyMiddleware(...middlewares));\r\n  }\r\n};\r\nexport const store = createStore(rootReducers, initialState, enhancers());\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://www.stackadapt.com/coinmarketcap',\r\n});\r\n\r\nexport default api;\r\n","import api from '../api';\r\n\r\nimport {FETCH_CRYPTO_SUCCESS, FETCH_CRYPTO_FAIL, REMOVE_CRYPTO_TOKEN, ADD_CRYPTO_TOKEN, FETCH_CRYPTO_LOADING, ADD_CRYPTO_FAIL} from './types';\r\n\r\nexport const fetchCryptoLoading = () => {\r\n  return {type: FETCH_CRYPTO_LOADING};\r\n};\r\nexport const fetchCryptoData = () => async (dispatch) => {\r\n  dispatch(fetchCryptoLoading());\r\n  try {\r\n    const {data} = await api.get('/map');\r\n    dispatch({\r\n      type: FETCH_CRYPTO_SUCCESS,\r\n      payload: data.data,\r\n    });\r\n\r\n    //Setup first 5 tokens for initial table display\r\n    for (let i = 0; i < 5; i++) {\r\n      dispatch(addCryptoToken(data.data[i].symbol));\r\n    }\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FETCH_CRYPTO_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeCryptoToken = (token) => {\r\n  return {\r\n    type: REMOVE_CRYPTO_TOKEN,\r\n    payload: token,\r\n  };\r\n};\r\n\r\nexport const addCryptoToken = (symbol) => async (dispatch) => {\r\n  try {\r\n    const {data} = await api.get(`/quotes?symbol=${symbol}`);\r\n    const {id, cmc_rank, name, quote} = data.data[symbol];\r\n    let price = null;\r\n    if (quote && quote.USD && quote.USD.price) {\r\n      price = quote.USD.price;\r\n    }\r\n    dispatch({\r\n      type: ADD_CRYPTO_TOKEN,\r\n      payload: {id, cmc_rank, name, symbol, price},\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADD_CRYPTO_FAIL,\r\n    });\r\n  }\r\n};\r\n","import {useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {addCryptoToken, removeCryptoToken, fetchCryptoData} from '../actions/crypto';\r\n\r\nconst CryptoPriceTracker = () => {\r\n  const cryptoData = useSelector((state) => state.crypto);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCryptoData());\r\n  }, []);\r\n\r\n  const handleRemoveToken = (e, symbol) => {\r\n    if (cryptoData.activeCount > 1) {\r\n      dispatch(removeCryptoToken(symbol));\r\n    }\r\n  };\r\n\r\n  const handleAddToken = (e) => {\r\n    if (cryptoData.activeCount < 10) {\r\n      dispatch(addCryptoToken(e.target.value));\r\n    }\r\n  };\r\n\r\n  const addToken = () => (\r\n    <div className='select-container'>\r\n      <label htmlFor='add-crypto'>Add Crypto Token</label>\r\n      <select id='add-crypto' value={''} onChange={handleAddToken}>\r\n        <option value=''>--add token--</option>\r\n        {cryptoData.tokenList.map(\r\n          (token) =>\r\n            !token.selected && (\r\n              <option value={token.symbol} key={token.id}>\r\n                {token.symbol}\r\n              </option>\r\n            )\r\n        )}\r\n      </select>\r\n    </div>\r\n  );\r\n\r\n  const tokenTable = () => (\r\n    <div className='table-container'>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Symbol</th>\r\n            <th>CMC Rank</th>\r\n            <th>Price</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {cryptoData &&\r\n            cryptoData.tokenList.map(\r\n              (token) =>\r\n                token.selected && (\r\n                  <tr key={token.id}>\r\n                    <td>{token.symbol}</td>\r\n                    <td>{token.cmc_rank}</td>\r\n                    <td>{token.price}</td>\r\n                    <td>\r\n                      <button onClick={(e) => handleRemoveToken(e, token.symbol)} disabled={cryptoData.activeCount === 1}>\r\n                        remove\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n            )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n\r\n  if (cryptoData.loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <>\r\n      {addToken()}\r\n      {tokenTable()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CryptoPriceTracker;\r\n","import './App.css';\nimport CryptoPriceTracker from './components/CryptoPriceTracker';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <h1>Crypto Price Tracker</h1>\n      <CryptoPriceTracker />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}